on:
    pull_request:
      branches: 
        - main
      types:
        - closed
env:
    REPO_NAME: jaredgb/cit262-jaredgb1-bb
    GKE_CLUSTER: cluster-1   
    GKE_ZONE: us-central1-c   
  
jobs:
    if_merged:
      if: github.event.pull_request.merged == true
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
        - run: |
            echo The PR was merged

        - run : |
            docker run -d -p 8000:8000 --name local_ddb amazon/dynamodb-local "-jar" "DynamoDBLocal.jar" "-inMemory" "-sharedDb"  and then create the table aws dynamodb create-table --table-name 'event' --attribute-definitions AttributeName=id,AttributeType=N --key-schema AttributeName=id,KeyType=HASH --billing-mode PAY_PER_REQUEST --endpoint-url http://localhost:8000

        - name: Check out the repo
          uses: actions/checkout@v4
  
        - run: |
            if [ -f package.json ]; then npm install; fi
        
        - name: Log in to Docker Hub
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
  
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REPO_NAME }}
            tags: |
              type=sha  
        
        - name: Build and push Docker image
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          with:
            context: ./bb/node-bulletin-board/bulletin-board-app
            file: ./bb/node-bulletin-board/bulletin-board-app/Dockerfile
            push: true
            tag_with_sha: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
# Setup gcloud CLI
        - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
          with:
            service_account_key: ${{ secrets.GKE_SA_KEY }}
            project_id: ${{ secrets.GKE_PROJECT }}
# Configure Docker to use the gcloud command-line tool as a credential
# helper for authentication
        - run: |-
           gcloud --quiet auth configure-docker us-docker.pkg.dev
        - uses: 'google-github-actions/auth@v1'
          with:
            credentials_json: ${{ secrets.GKE_SA_KEY }}
# Get the GKE credentials so we can deploy to the cluster
        - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
          with:
            cluster_name: ${{ env.GKE_CLUSTER }}
            location: ${{ env.GKE_ZONE }}
            credentials: ${{ secrets.GKE_SA_KEY }}
            project_id: ${{ secrets.GKE_PROJECT }}
        - name: Deploy
          run: |-
            kubectl apply -f ./bwh-demo-bb-deployment-loadbalancer.yaml      